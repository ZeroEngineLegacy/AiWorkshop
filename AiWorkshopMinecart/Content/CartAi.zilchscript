class CartAi : ZilchComponent
{
  [Dependency] var Transform : Transform;
  [Dependency] var Cart : Cart;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    if(Zero.Keyboard.KeyIsPressed(Keys.Space) || Zero.Keyboard.KeyIsPressed(Keys.W))
      this.Cart.JumpCart(1.0);
      
    if(Zero.Keyboard.KeyIsDown(Keys.A))
      this.Cart.Brake(1.0);
      
    if(Zero.Keyboard.KeyIsDown(Keys.D))
      this.Cart.Boost(1.0);
      
    if(Zero.Keyboard.KeyIsPressed(Keys.E))
      this.Cart.JumpRider(1.0);
    
    if(Zero.Keyboard.KeyIsPressed(Keys.R))
      this.Cart.EjectRider(1.3);
    
    var ourPos = this.Transform.WorldTranslation;
    var cartHeight = 1.2;
    var riderHeight = 0.7;
    var ourTotalHeight = cartHeight + riderHeight;
    
    //----------------------------------------------------------- Student code below
    //this.Cart.Boost(1.0);
    //var obstacle = GetNextObstacle();
    //var distanceToObstacle
    //var getNextPowerup = GetNextPowerup();
    
    //if(coinInFront && !upcomingGap && !upcomingEnemy)
    //  jump
    
    var obstacles = this.Cart.GetObstacles();
    
    foreach(var obstacle in obstacles)
    {
      var obstaclePos = obstacle.Transform.WorldTranslation;
      var obstacleBottom = obstaclePos.Y - obstacle.Transform.WorldScale.Y * 0.5;
      
      var distanceX = (obstaclePos.X - ourPos.X);
      var distanceY = (obstacleBottom - ourPos.Y);
      if(distanceX < 8.0 && distanceY > cartHeight && distanceY < ourTotalHeight)
        this.Cart.JumpRider(1.0);
      else if(distanceX < 5 && distanceY <= cartHeight)
        this.Cart.JumpCart(1.0);
    }
    
    //var distanceToObstacle = this.Cart.GetClosestObstacleDistance();
    //if(distanceToObstacle < 5.0)
    //  this.Cart.JumpCart(1.0);
      
    //if(this.Cart.AtJumpPoint())
    //  var distanceToNextPlatformn
    //
    //
    //
  }
}
