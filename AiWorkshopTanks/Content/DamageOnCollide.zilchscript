class DamageOnCollide : ZilchComponent
{
  // How much damage to apply to what we hit when we collide with it.
  [Property]
  var Damage : Real = 10.0;
  
  // Do we send the death event when we collide?
  [Property]
  var SendsDeathEvent : Boolean = true;
  // Whether or not we die when we collide with something.
  [Property]
  var DieOnCollide : Boolean = true;
  
  // The root cog we originated from (we ignore damage to this cog and its descendents).
  // Set this to null to damage everything
  var OriginRoot : Cog = null;
  
  // When we die, we sound out a death event.
  sends ObjectHitOnDeath : ObjectHitOnDeathEvent;
  // When colliding we tell an object that we're applying damage to it.
  sends ApplyDamage : DamageEvent2;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
  }
  
  function OnCollisionStarted(collisionEvent : CollisionEvent)
  {
    // Get the other object we hit.
    var otherObject = collisionEvent.OtherObject;
    if(otherObject.Collider.Ghost)
      return;
    
    // Currently, bullets will collide with other bullets.
    // A check here can be added to ignore collisions between other bullet objects.
    // Collision groups can also be used here to solve this problem.
    
    // Also get the root in the hierarchy (used to make sure that
    // the person who shot this doesn't get hit by his own shot).
    var otherRoot = otherObject.FindRoot();
    
    // Don't damage the person we were created from.
    if(otherRoot == this.OriginRoot)
      return;
    
    // If what we hit has a health component then damage it.
    var health = otherObject.Health;
    
    // If the object we hit doesn't have health, check the root for health
    if(health == null)
      health = otherRoot.Health;
    
    if(health != null)
    {
      var firstPoint = collisionEvent.FirstPoint;
      var damageEvent = DamageEvent2();
      damageEvent.Normal = firstPoint.WorldNormalTowardsOther;
      damageEvent.Damage = this.Damage;
      damageEvent.WorldPoint = firstPoint.WorldPoint;
      damageEvent.OriginRoot = this.OriginRoot;
      health.Owner.DispatchEvent(Events.ApplyDamage, damageEvent);
    }
    
    // Let anyone listening know we just died.
    if(this.SendsDeathEvent)
      this.Owner.DispatchEvent(Events.ObjectHitOnDeath, ObjectHitOnDeathEvent(otherRoot));
    
    if(this.DieOnCollide)
      this.Owner.Destroy();
  }
}
