class DestructibleWall : ZilchComponent
{
    [Property]
    var RegenTime : Real = 3.0;
    
    [Property]
    var RegenObject : Archetype = null;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.Death, this.OnDeath);
    }

    function OnDeath(event : Event)
    {
        this.Owner.Model.Visible = false;
        //this.Owner.BoxCollider.Ghost = true;
        //this.Owner.BoxCollider.SendsEvents = false;
        this.Owner.RemoveComponentByName("BoxCollider");
        
        var seq = Action.Sequence(this.Owner.Actions);
        Action.Delay(seq, this.RegenTime);
        Action.Call(seq, this.Regenerate);
    }
    
    function Regenerate()
    {
        var seq = Action.Sequence(this.Owner.Actions);
        var wallRegen = this.Space.CreateAtPosition(this.RegenObject, Real3(0,0,0));
        wallRegen.AttachTo(this.Owner);
        //Action.Property(seq, @this.Owner.Model.Color, Real4(0.4,0.4,0.4,1), 0.5, Ease.QuadOut);
        Action.Delay(seq, 1.0);
        Action.Call(seq, this.Regenerated);
    }
    
    function Regenerated()
    {
        //this.Owner.BoxCollider.Ghost = false;
        //this.Owner.BoxCollider.SendsEvents = true;
        this.Owner.AddComponentByName("BoxCollider");
        this.Owner.Model.Visible = true;
        
        this.Owner.Health.CurrentHealth = this.Owner.Health.MaxHealth;
    }
}
