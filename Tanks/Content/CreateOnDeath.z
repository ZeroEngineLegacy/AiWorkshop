class ModifyColorEvent : ZilchEvent
{
  var Color : ColorPiece;
  
  constructor(color : ColorPiece)
    : base()
    {
      this.Color = color;
    }
    
}

class CreateOnDeath : ZilchComponent
{
  sends ModifyColor : ModifyColorEvent;
  
    // The archetype to create when we're destroyed.
    [Property]
    var ArchetypeToCreate : Archetype = null;
    
    function Initialize(init : CogInitializer)
    {
        // Listen for an event on ourself that says we died.
        Zero.Connect(this.Owner, Events.Death, this.OnDeath);
    }
    
    function OnDeath(e : DeathEvent)
    {
        // Create an object at our position.
        var pos = this.Owner.Transform.Translation;
        var obj = this.Space.CreateAtPosition(this.ArchetypeToCreate, pos);
        
        if(e.ObjectCausedDeath == null)
          return;
        
        var root = e.ObjectCausedDeath.FindRoot();
        var color = root.ColorPiece;
        if(color != null)
          obj.DispatchEvent(Events.ModifyColor, ModifyColorEvent(color));
    }
}
